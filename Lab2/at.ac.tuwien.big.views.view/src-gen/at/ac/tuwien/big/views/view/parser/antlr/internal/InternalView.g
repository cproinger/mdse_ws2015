/*
 * generated by Xtext
 */
grammar InternalView;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package at.ac.tuwien.big.views.view.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.tuwien.big.views.view.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.tuwien.big.views.view.services.ViewGrammarAccess;

}

@parser::members {

 	private ViewGrammarAccess grammarAccess;
 	
    public InternalViewParser(TokenStream input, ViewGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ViewModel";	
   	}
   	
   	@Override
   	protected ViewGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleViewModel
entryRuleViewModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewModelRule()); }
	 iv_ruleViewModel=ruleViewModel 
	 { $current=$iv_ruleViewModel.current; } 
	 EOF 
;

// Rule ViewModel
ruleViewModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getViewModelAccess().getViewGroupsViewGroupParserRuleCall_0_0()); 
	    }
		lv_viewGroups_0_0=ruleViewGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewModelRule());
	        }
       		add(
       			$current, 
       			"viewGroups",
        		lv_viewGroups_0_0, 
        		"ViewGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getViewModelAccess().getViewGroupsViewGroupParserRuleCall_1_0()); 
	    }
		lv_viewGroups_1_0=ruleViewGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewModelRule());
	        }
       		add(
       			$current, 
       			"viewGroups",
        		lv_viewGroups_1_0, 
        		"ViewGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?
;





// Entry rule entryRuleViewGroup
entryRuleViewGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewGroupRule()); }
	 iv_ruleViewGroup=ruleViewGroup 
	 { $current=$iv_ruleViewGroup.current; } 
	 EOF 
;

// Rule ViewGroup
ruleViewGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_welcomeViewGroup_0_0=	'welcome' 
    {
        newLeafNode(lv_welcomeViewGroup_0_0, grammarAccess.getViewGroupAccess().getWelcomeViewGroupWelcomeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewGroupRule());
	        }
       		setWithLastConsumed($current, "welcomeViewGroup", true, "welcome");
	    }

)
)?	otherlv_1='viewgroup' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getViewGroupAccess().getViewgroupKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getViewGroupAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getViewGroupAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getViewGroupAccess().getViewsViewParserRuleCall_4_0_0()); 
	    }
		lv_views_4_0=ruleView		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewGroupRule());
	        }
       		add(
       			$current, 
       			"views",
        		lv_views_4_0, 
        		"View");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getViewGroupAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getViewGroupAccess().getViewsViewParserRuleCall_4_1_1_0()); 
	    }
		lv_views_6_0=ruleView		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getViewGroupRule());
	        }
       		add(
       			$current, 
       			"views",
        		lv_views_6_0, 
        		"View");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getViewGroupAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleView
entryRuleView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewRule()); }
	 iv_ruleView=ruleView 
	 { $current=$iv_ruleView.current; } 
	 EOF 
;

// Rule View
ruleView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getViewAccess().getClassIndexViewParserRuleCall_0()); 
    }
    this_ClassIndexView_0=ruleClassIndexView
    { 
        $current = $this_ClassIndexView_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getViewAccess().getClassOperationViewParserRuleCall_1()); 
    }
    this_ClassOperationView_1=ruleClassOperationView
    { 
        $current = $this_ClassOperationView_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassIndexView
entryRuleClassIndexView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassIndexViewRule()); }
	 iv_ruleClassIndexView=ruleClassIndexView 
	 { $current=$iv_ruleClassIndexView.current; } 
	 EOF 
;

// Rule ClassIndexView
ruleClassIndexView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_startView_0_0=	'start' 
    {
        newLeafNode(lv_startView_0_0, grammarAccess.getClassIndexViewAccess().getStartViewStartKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassIndexViewRule());
	        }
       		setWithLastConsumed($current, "startView", true, "start");
	    }

)
)?	otherlv_1='index-view' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassIndexViewAccess().getIndexViewKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getClassIndexViewAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassIndexViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		lv_header_3_0=RULE_STRING
		{
			newLeafNode(lv_header_3_0, grammarAccess.getClassIndexViewAccess().getHeaderSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassIndexViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='handles' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassIndexViewAccess().getHandlesKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassIndexViewRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassIndexViewAccess().getClassClassCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClassIndexViewAccess().getLeftCurlyBracketKeyword_6());
    }
(	otherlv_7='view-description' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClassIndexViewAccess().getViewDescriptionKeyword_7_0());
    }
(
(
		lv_description_8_0=RULE_STRING
		{
			newLeafNode(lv_description_8_0, grammarAccess.getClassIndexViewAccess().getDescriptionSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassIndexViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getClassIndexViewAccess().getLinkLinkParserRuleCall_8_0_0()); 
	    }
		lv_link_9_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassIndexViewRule());
	        }
       		add(
       			$current, 
       			"link",
        		lv_link_9_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getClassIndexViewAccess().getCommaKeyword_8_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassIndexViewAccess().getLinkLinkParserRuleCall_8_1_1_0()); 
	    }
		lv_link_11_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassIndexViewRule());
	        }
       		add(
       			$current, 
       			"link",
        		lv_link_11_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getClassIndexViewAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleClassOperationView
entryRuleClassOperationView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassOperationViewRule()); }
	 iv_ruleClassOperationView=ruleClassOperationView 
	 { $current=$iv_ruleClassOperationView.current; } 
	 EOF 
;

// Rule ClassOperationView
ruleClassOperationView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClassOperationViewAccess().getCreateViewParserRuleCall_0()); 
    }
    this_CreateView_0=ruleCreateView
    { 
        $current = $this_CreateView_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClassOperationViewAccess().getReadViewParserRuleCall_1()); 
    }
    this_ReadView_1=ruleReadView
    { 
        $current = $this_ReadView_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClassOperationViewAccess().getUpdateViewParserRuleCall_2()); 
    }
    this_UpdateView_2=ruleUpdateView
    { 
        $current = $this_UpdateView_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClassOperationViewAccess().getDeleteViewParserRuleCall_3()); 
    }
    this_DeleteView_3=ruleDeleteView
    { 
        $current = $this_DeleteView_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCreateView
entryRuleCreateView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCreateViewRule()); }
	 iv_ruleCreateView=ruleCreateView 
	 { $current=$iv_ruleCreateView.current; } 
	 EOF 
;

// Rule CreateView
ruleCreateView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateViewAccess().getLayoutLayoutParserRuleCall_0_0()); 
	    }
		lv_layout_0_0=ruleLayout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateViewRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_0_0, 
        		"Layout");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_startView_1_0=	'start' 
    {
        newLeafNode(lv_startView_1_0, grammarAccess.getCreateViewAccess().getStartViewStartKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateViewRule());
	        }
       		setWithLastConsumed($current, "startView", true, "start");
	    }

)
)?	otherlv_2='create-view' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCreateViewAccess().getCreateViewKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getCreateViewAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		lv_header_4_0=RULE_STRING
		{
			newLeafNode(lv_header_4_0, grammarAccess.getCreateViewAccess().getHeaderSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='handles' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCreateViewAccess().getHandlesKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateViewRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCreateViewAccess().getClassClassCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCreateViewAccess().getLeftCurlyBracketKeyword_7());
    }
(	otherlv_8='view-description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCreateViewAccess().getViewDescriptionKeyword_8_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getCreateViewAccess().getDescriptionSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateViewAccess().getElementGroupsElementGroupParserRuleCall_9_0_0()); 
	    }
		lv_elementGroups_10_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_10_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCreateViewAccess().getCommaKeyword_9_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCreateViewAccess().getElementGroupsElementGroupParserRuleCall_9_1_1_0()); 
	    }
		lv_elementGroups_12_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_12_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCreateViewAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleReadView
entryRuleReadView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReadViewRule()); }
	 iv_ruleReadView=ruleReadView 
	 { $current=$iv_ruleReadView.current; } 
	 EOF 
;

// Rule ReadView
ruleReadView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getReadViewAccess().getLayoutLayoutParserRuleCall_0_0()); 
	    }
		lv_layout_0_0=ruleLayout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadViewRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_0_0, 
        		"Layout");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_startView_1_0=	'start' 
    {
        newLeafNode(lv_startView_1_0, grammarAccess.getReadViewAccess().getStartViewStartKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadViewRule());
	        }
       		setWithLastConsumed($current, "startView", true, "start");
	    }

)
)?	otherlv_2='read-view' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReadViewAccess().getReadViewKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getReadViewAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		lv_header_4_0=RULE_STRING
		{
			newLeafNode(lv_header_4_0, grammarAccess.getReadViewAccess().getHeaderSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='handles' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReadViewAccess().getHandlesKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadViewRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getReadViewAccess().getClassClassCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReadViewAccess().getLeftCurlyBracketKeyword_7());
    }
(	otherlv_8='view-description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getReadViewAccess().getViewDescriptionKeyword_8_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getReadViewAccess().getDescriptionSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getReadViewAccess().getElementGroupsElementGroupParserRuleCall_9_0_0()); 
	    }
		lv_elementGroups_10_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_10_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getReadViewAccess().getCommaKeyword_9_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReadViewAccess().getElementGroupsElementGroupParserRuleCall_9_1_1_0()); 
	    }
		lv_elementGroups_12_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_12_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getReadViewAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleUpdateView
entryRuleUpdateView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUpdateViewRule()); }
	 iv_ruleUpdateView=ruleUpdateView 
	 { $current=$iv_ruleUpdateView.current; } 
	 EOF 
;

// Rule UpdateView
ruleUpdateView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateViewAccess().getLayoutLayoutParserRuleCall_0_0()); 
	    }
		lv_layout_0_0=ruleLayout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateViewRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_0_0, 
        		"Layout");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_startView_1_0=	'start' 
    {
        newLeafNode(lv_startView_1_0, grammarAccess.getUpdateViewAccess().getStartViewStartKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateViewRule());
	        }
       		setWithLastConsumed($current, "startView", true, "start");
	    }

)
)?	otherlv_2='update-view' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUpdateViewAccess().getUpdateViewKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUpdateViewAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		lv_header_4_0=RULE_STRING
		{
			newLeafNode(lv_header_4_0, grammarAccess.getUpdateViewAccess().getHeaderSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='handles' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUpdateViewAccess().getHandlesKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateViewRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUpdateViewAccess().getClassClassCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUpdateViewAccess().getLeftCurlyBracketKeyword_7());
    }
(	otherlv_8='view-description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUpdateViewAccess().getViewDescriptionKeyword_8_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getUpdateViewAccess().getDescriptionSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUpdateViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateViewAccess().getElementGroupsElementGroupParserRuleCall_9_0_0()); 
	    }
		lv_elementGroups_10_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_10_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUpdateViewAccess().getCommaKeyword_9_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUpdateViewAccess().getElementGroupsElementGroupParserRuleCall_9_1_1_0()); 
	    }
		lv_elementGroups_12_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpdateViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_12_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUpdateViewAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleDeleteView
entryRuleDeleteView returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeleteViewRule()); }
	 iv_ruleDeleteView=ruleDeleteView 
	 { $current=$iv_ruleDeleteView.current; } 
	 EOF 
;

// Rule DeleteView
ruleDeleteView returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDeleteViewAccess().getLayoutLayoutParserRuleCall_0_0()); 
	    }
		lv_layout_0_0=ruleLayout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeleteViewRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_0_0, 
        		"Layout");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_startView_1_0=	'start' 
    {
        newLeafNode(lv_startView_1_0, grammarAccess.getDeleteViewAccess().getStartViewStartKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteViewRule());
	        }
       		setWithLastConsumed($current, "startView", true, "start");
	    }

)
)?	otherlv_2='delete-view' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDeleteViewAccess().getDeleteViewKeyword_2());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getDeleteViewAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		lv_header_4_0=RULE_STRING
		{
			newLeafNode(lv_header_4_0, grammarAccess.getDeleteViewAccess().getHeaderSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='handles' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDeleteViewAccess().getHandlesKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteViewRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDeleteViewAccess().getClassClassCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDeleteViewAccess().getLeftCurlyBracketKeyword_7());
    }
(	otherlv_8='view-description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDeleteViewAccess().getViewDescriptionKeyword_8_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getDeleteViewAccess().getDescriptionSTRINGTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDeleteViewRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"STRING");
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getDeleteViewAccess().getElementGroupsElementGroupParserRuleCall_9_0_0()); 
	    }
		lv_elementGroups_10_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeleteViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_10_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDeleteViewAccess().getCommaKeyword_9_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeleteViewAccess().getElementGroupsElementGroupParserRuleCall_9_1_1_0()); 
	    }
		lv_elementGroups_12_0=ruleElementGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeleteViewRule());
	        }
       		add(
       			$current, 
       			"elementGroups",
        		lv_elementGroups_12_0, 
        		"ElementGroup");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDeleteViewAccess().getRightCurlyBracketKeyword_10());
    }
)
;







// Entry rule entryRuleElementGroup
entryRuleElementGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementGroupRule()); }
	 iv_ruleElementGroup=ruleElementGroup 
	 { $current=$iv_ruleElementGroup.current; } 
	 EOF 
;

// Rule ElementGroup
ruleElementGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getElementGroupAccess().getLayoutLayoutParserRuleCall_0_0()); 
	    }
		lv_layout_0_0=ruleLayout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementGroupRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_0_0, 
        		"Layout");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='elementgroup' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElementGroupAccess().getElementgroupKeyword_1());
    }
(
(
		lv_header_2_0=RULE_STRING
		{
			newLeafNode(lv_header_2_0, grammarAccess.getElementGroupAccess().getHeaderSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElementGroupAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getElementGroupAccess().getViewElementsViewElementParserRuleCall_4_0_0()); 
	    }
		lv_viewElements_4_0=ruleViewElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementGroupRule());
	        }
       		add(
       			$current, 
       			"viewElements",
        		lv_viewElements_4_0, 
        		"ViewElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getElementGroupAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementGroupAccess().getViewElementsViewElementParserRuleCall_4_1_1_0()); 
	    }
		lv_viewElements_6_0=ruleViewElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementGroupRule());
	        }
       		add(
       			$current, 
       			"viewElements",
        		lv_viewElements_6_0, 
        		"ViewElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_7='with' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getElementGroupAccess().getWithKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementGroupAccess().getConditionConditionParserRuleCall_5_1_0()); 
	    }
		lv_condition_8_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementGroupRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_8_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getElementGroupAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleViewElement
entryRuleViewElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewElementRule()); }
	 iv_ruleViewElement=ruleViewElement 
	 { $current=$iv_ruleViewElement.current; } 
	 EOF 
;

// Rule ViewElement
ruleViewElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getViewElementAccess().getAssociationElementParserRuleCall_0()); 
    }
    this_AssociationElement_0=ruleAssociationElement
    { 
        $current = $this_AssociationElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getViewElementAccess().getPropertyElementParserRuleCall_1()); 
    }
    this_PropertyElement_1=rulePropertyElement
    { 
        $current = $this_PropertyElement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAssociationElement
entryRuleAssociationElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssociationElementRule()); }
	 iv_ruleAssociationElement=ruleAssociationElement 
	 { $current=$iv_ruleAssociationElement.current; } 
	 EOF 
;

// Rule AssociationElement
ruleAssociationElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAssociationElementAccess().getTableParserRuleCall_0()); 
    }
    this_Table_0=ruleTable
    { 
        $current = $this_Table_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAssociationElementAccess().getListParserRuleCall_1()); 
    }
    this_List_1=ruleList
    { 
        $current = $this_List_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleList
entryRuleList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListRule()); }
	 iv_ruleList=ruleList 
	 { $current=$iv_ruleList.current; } 
	 EOF 
;

// Rule List
ruleList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListAccess().getListKeyword_0());
    }
(
(
		lv_elementID_1_0=RULE_ID
		{
			newLeafNode(lv_elementID_1_0, grammarAccess.getListAccess().getElementIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementID",
        		lv_elementID_1_0, 
        		"ID");
	    }

)
)(
(
		lv_label_2_0=RULE_STRING
		{
			newLeafNode(lv_label_2_0, grammarAccess.getListAccess().getLabelSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='handles' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListAccess().getHandlesKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getListRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getAssociationAssociationCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getLinkLinkParserRuleCall_6_0_0()); 
	    }
		lv_link_6_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		add(
       			$current, 
       			"link",
        		lv_link_6_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getListAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getLinkLinkParserRuleCall_6_1_1_0()); 
	    }
		lv_link_8_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		add(
       			$current, 
       			"link",
        		lv_link_8_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getListAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	 iv_ruleTable=ruleTable 
	 { $current=$iv_ruleTable.current; } 
	 EOF 
;

// Rule Table
ruleTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='table' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableAccess().getTableKeyword_0());
    }
(
(
		lv_elementID_1_0=RULE_ID
		{
			newLeafNode(lv_elementID_1_0, grammarAccess.getTableAccess().getElementIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementID",
        		lv_elementID_1_0, 
        		"ID");
	    }

)
)(
(
		lv_label_2_0=RULE_STRING
		{
			newLeafNode(lv_label_2_0, grammarAccess.getTableAccess().getLabelSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='handles' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableAccess().getHandlesKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getAssociationAssociationCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getLinkLinkParserRuleCall_6_0_0()); 
	    }
		lv_link_6_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"link",
        		lv_link_6_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTableAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getLinkLinkParserRuleCall_6_1_1_0()); 
	    }
		lv_link_8_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"link",
        		lv_link_8_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_6_2_0_0()); 
	    }
		lv_columns_9_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_9_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTableAccess().getCommaKeyword_6_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_6_2_1_1_0()); 
	    }
		lv_columns_11_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_11_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)?((
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_7_0_0()); 
	    }
		lv_columns_12_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_12_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTableAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_7_1_1_0()); 
	    }
		lv_columns_14_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_14_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRulePropertyElement
entryRulePropertyElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyElementRule()); }
	 iv_rulePropertyElement=rulePropertyElement 
	 { $current=$iv_rulePropertyElement.current; } 
	 EOF 
;

// Rule PropertyElement
rulePropertyElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyElementAccess().getColumnParserRuleCall_0()); 
    }
    this_Column_0=ruleColumn
    { 
        $current = $this_Column_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyElementAccess().getTextParserRuleCall_1()); 
    }
    this_Text_1=ruleText
    { 
        $current = $this_Text_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyElementAccess().getSelectionParserRuleCall_2()); 
    }
    this_Selection_2=ruleSelection
    { 
        $current = $this_Selection_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyElementAccess().getDateTimePickerParserRuleCall_3()); 
    }
    this_DateTimePicker_3=ruleDateTimePicker
    { 
        $current = $this_DateTimePicker_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	 iv_ruleColumn=ruleColumn 
	 { $current=$iv_ruleColumn.current; } 
	 EOF 
;

// Rule Column
ruleColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='column' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getColumnAccess().getColumnKeyword_0());
    }
(
(
		lv_elementID_1_0=RULE_ID
		{
			newLeafNode(lv_elementID_1_0, grammarAccess.getColumnAccess().getElementIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementID",
        		lv_elementID_1_0, 
        		"ID");
	    }

)
)(
(
		lv_label_2_0=RULE_STRING
		{
			newLeafNode(lv_label_2_0, grammarAccess.getColumnAccess().getLabelSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='handles' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getColumnAccess().getHandlesKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getColumnAccess().getPropertyPropertyCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDateTimePicker
entryRuleDateTimePicker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateTimePickerRule()); }
	 iv_ruleDateTimePicker=ruleDateTimePicker 
	 { $current=$iv_ruleDateTimePicker.current; } 
	 EOF 
;

// Rule DateTimePicker
ruleDateTimePicker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='date-time-picker' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateTimePickerAccess().getDateTimePickerKeyword_0());
    }
(
(
		lv_elementID_1_0=RULE_ID
		{
			newLeafNode(lv_elementID_1_0, grammarAccess.getDateTimePickerAccess().getElementIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateTimePickerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementID",
        		lv_elementID_1_0, 
        		"ID");
	    }

)
)(
(
		lv_label_2_0=RULE_STRING
		{
			newLeafNode(lv_label_2_0, grammarAccess.getDateTimePickerAccess().getLabelSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateTimePickerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"STRING");
	    }

)
)(
(
		lv_format_3_0=RULE_STRING
		{
			newLeafNode(lv_format_3_0, grammarAccess.getDateTimePickerAccess().getFormatSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateTimePickerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"format",
        		lv_format_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='handles' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDateTimePickerAccess().getHandlesKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateTimePickerRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDateTimePickerAccess().getPropertyPropertyCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_long_0_0=	'long' 
    {
        newLeafNode(lv_long_0_0, grammarAccess.getTextAccess().getLongLongKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed($current, "long", true, "long");
	    }

)
)?	otherlv_1='text' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTextAccess().getTextKeyword_1());
    }
(
(
		lv_elementID_2_0=RULE_ID
		{
			newLeafNode(lv_elementID_2_0, grammarAccess.getTextAccess().getElementIDIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementID",
        		lv_elementID_2_0, 
        		"ID");
	    }

)
)(
(
		lv_label_3_0=RULE_STRING
		{
			newLeafNode(lv_label_3_0, grammarAccess.getTextAccess().getLabelSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='format' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTextAccess().getFormatKeyword_4_0());
    }
(
(
		lv_format_5_0=RULE_STRING
		{
			newLeafNode(lv_format_5_0, grammarAccess.getTextAccess().getFormatSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"format",
        		lv_format_5_0, 
        		"STRING");
	    }

)
))?	otherlv_6='handles' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTextAccess().getHandlesKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getPropertyPropertyCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	 iv_ruleSelection=ruleSelection 
	 { $current=$iv_ruleSelection.current; } 
	 EOF 
;

// Rule Selection
ruleSelection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='selection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectionAccess().getSelectionKeyword_0());
    }
(
(
		lv_elementID_1_0=RULE_ID
		{
			newLeafNode(lv_elementID_1_0, grammarAccess.getSelectionAccess().getElementIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"elementID",
        		lv_elementID_1_0, 
        		"ID");
	    }

)
)(
(
		lv_label_2_0=RULE_STRING
		{
			newLeafNode(lv_label_2_0, grammarAccess.getSelectionAccess().getLabelSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='handles' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSelectionAccess().getHandlesKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSelectionAccess().getPropertyPropertyCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSelectionAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionAccess().getSelectionItemsSelectionItemParserRuleCall_6_0_0()); 
	    }
		lv_selectionItems_6_0=ruleSelectionItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionRule());
	        }
       		add(
       			$current, 
       			"selectionItems",
        		lv_selectionItems_6_0, 
        		"SelectionItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSelectionAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionAccess().getSelectionItemsSelectionItemParserRuleCall_6_1_1_0()); 
	    }
		lv_selectionItems_8_0=ruleSelectionItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionRule());
	        }
       		add(
       			$current, 
       			"selectionItems",
        		lv_selectionItems_8_0, 
        		"SelectionItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSelectionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSelectionItem
entryRuleSelectionItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectionItemRule()); }
	 iv_ruleSelectionItem=ruleSelectionItem 
	 { $current=$iv_ruleSelectionItem.current; } 
	 EOF 
;

// Rule SelectionItem
ruleSelectionItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSelectionItemAccess().getEnumerationLiteralItemParserRuleCall_0()); 
    }
    this_EnumerationLiteralItem_0=ruleEnumerationLiteralItem
    { 
        $current = $this_EnumerationLiteralItem_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='selection-item' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectionItemAccess().getSelectionItemKeyword_1_0());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getSelectionItemAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleEnumerationLiteralItem
entryRuleEnumerationLiteralItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralItemRule()); }
	 iv_ruleEnumerationLiteralItem=ruleEnumerationLiteralItem 
	 { $current=$iv_ruleEnumerationLiteralItem.current; } 
	 EOF 
;

// Rule EnumerationLiteralItem
ruleEnumerationLiteralItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum-literal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumerationLiteralItemAccess().getEnumLiteralKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getEnumerationLiteralItemAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationLiteralItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='handles' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumerationLiteralItemAccess().getHandlesKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationLiteralItemRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEnumerationLiteralItemAccess().getEnumerationLiteralEnumerationLiteralCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkKeyword_0());
    }
(
(
		lv_label_1_0=RULE_STRING
		{
			newLeafNode(lv_label_1_0, grammarAccess.getLinkAccess().getLabelSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='handles' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getHandlesKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLinkAccess().getTargetViewClassOperationViewCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLayoutRule()); }
	 iv_ruleLayout=ruleLayout 
	 { $current=$iv_ruleLayout.current; } 
	 EOF 
;

// Rule Layout
ruleLayout returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getLayoutAccess().getAlignmentLayoutStyleEnumRuleCall_0()); 
	    }
		lv_alignment_0_0=ruleLayoutStyle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayoutRule());
	        }
       		set(
       			$current, 
       			"alignment",
        		lv_alignment_0_0, 
        		"LayoutStyle");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getConditionAccess().getVisibilityConditionParserRuleCall()); 
    }
    this_VisibilityCondition_0=ruleVisibilityCondition
    { 
        $current = $this_VisibilityCondition_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleVisibilityCondition
entryRuleVisibilityCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisibilityConditionRule()); }
	 iv_ruleVisibilityCondition=ruleVisibilityCondition 
	 { $current=$iv_ruleVisibilityCondition.current; } 
	 EOF 
;

// Rule VisibilityCondition
ruleVisibilityCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVisibilityConditionAccess().getCompositeConditionParserRuleCall_0()); 
    }
    this_CompositeCondition_0=ruleCompositeCondition
    { 
        $current = $this_CompositeCondition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVisibilityConditionAccess().getComparisonConditionParserRuleCall_1()); 
    }
    this_ComparisonCondition_1=ruleComparisonCondition
    { 
        $current = $this_ComparisonCondition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCompositeCondition
entryRuleCompositeCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeConditionRule()); }
	 iv_ruleCompositeCondition=ruleCompositeCondition 
	 { $current=$iv_ruleCompositeCondition.current; } 
	 EOF 
;

// Rule CompositeCondition
ruleCompositeCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='composite-condition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompositeConditionAccess().getCompositeConditionKeyword_0());
    }
(
(
		lv_conditionID_1_0=RULE_ID
		{
			newLeafNode(lv_conditionID_1_0, grammarAccess.getCompositeConditionAccess().getConditionIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositeConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"conditionID",
        		lv_conditionID_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompositeConditionAccess().getColonKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompositeConditionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getComposedConditionsVisibilityConditionParserRuleCall_4_0_0()); 
	    }
		lv_composedConditions_4_0=ruleVisibilityCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		add(
       			$current, 
       			"composedConditions",
        		lv_composedConditions_4_0, 
        		"VisibilityCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getCompositionTypeCompositeConditionTypeEnumRuleCall_4_1_0()); 
	    }
		lv_compositionType_5_0=ruleCompositeConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		set(
       			$current, 
       			"compositionType",
        		lv_compositionType_5_0, 
        		"CompositeConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='||' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompositeConditionAccess().getVerticalLineVerticalLineKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getCompositionTypeCompositeConditionTypeEnumRuleCall_4_2_1_0()); 
	    }
		lv_compositionType_7_0=ruleCompositeConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		set(
       			$current, 
       			"compositionType",
        		lv_compositionType_7_0, 
        		"CompositeConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getComposedConditionsVisibilityConditionParserRuleCall_4_2_2_0()); 
	    }
		lv_composedConditions_8_0=ruleVisibilityCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		add(
       			$current, 
       			"composedConditions",
        		lv_composedConditions_8_0, 
        		"VisibilityCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCompositeConditionAccess().getRightParenthesisKeyword_5());
    }
	otherlv_10='?' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCompositeConditionAccess().getQuestionMarkKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getTypeVisibilityConditionTypeEnumRuleCall_7_0()); 
	    }
		lv_type_11_0=ruleVisibilityConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_11_0, 
        		"VisibilityConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleComparisonCondition
entryRuleComparisonCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComparisonConditionRule()); }
	 iv_ruleComparisonCondition=ruleComparisonCondition 
	 { $current=$iv_ruleComparisonCondition.current; } 
	 EOF 
;

// Rule ComparisonCondition
ruleComparisonCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='comparison-condition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComparisonConditionAccess().getComparisonConditionKeyword_0());
    }
(
(
		lv_conditionID_1_0=RULE_ID
		{
			newLeafNode(lv_conditionID_1_0, grammarAccess.getComparisonConditionAccess().getConditionIDIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComparisonConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"conditionID",
        		lv_conditionID_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getComparisonConditionAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComparisonConditionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getComparisonConditionAccess().getPropertyPropertyElementCrossReference_3_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparisonConditionAccess().getComparisonTypeComparisonConditionTypeEnumRuleCall_4_0()); 
	    }
		lv_comparisonType_4_0=ruleComparisonConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparisonConditionRule());
	        }
       		set(
       			$current, 
       			"comparisonType",
        		lv_comparisonType_4_0, 
        		"ComparisonConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_comparisonValue_5_0=RULE_STRING
		{
			newLeafNode(lv_comparisonValue_5_0, grammarAccess.getComparisonConditionAccess().getComparisonValueSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComparisonConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comparisonValue",
        		lv_comparisonValue_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='?' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getComparisonConditionAccess().getQuestionMarkKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComparisonConditionAccess().getTypeVisibilityConditionTypeEnumRuleCall_7_0()); 
	    }
		lv_type_7_0=ruleVisibilityConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparisonConditionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"VisibilityConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule LayoutStyle
ruleLayoutStyle returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='vertical' 
	{
        $current = grammarAccess.getLayoutStyleAccess().getVerticalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLayoutStyleAccess().getVerticalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='horizontal' 
	{
        $current = grammarAccess.getLayoutStyleAccess().getHorizontalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLayoutStyleAccess().getHorizontalEnumLiteralDeclaration_1()); 
    }
));



// Rule VisibilityConditionType
ruleVisibilityConditionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Hide' 
	{
        $current = grammarAccess.getVisibilityConditionTypeAccess().getHideEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVisibilityConditionTypeAccess().getHideEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Show' 
	{
        $current = grammarAccess.getVisibilityConditionTypeAccess().getShowEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVisibilityConditionTypeAccess().getShowEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Enable' 
	{
        $current = grammarAccess.getVisibilityConditionTypeAccess().getEnableEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVisibilityConditionTypeAccess().getEnableEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Disable' 
	{
        $current = grammarAccess.getVisibilityConditionTypeAccess().getDisableEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVisibilityConditionTypeAccess().getDisableEnumLiteralDeclaration_3()); 
    }
));



// Rule CompositeConditionType
ruleCompositeConditionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='And' 
	{
        $current = grammarAccess.getCompositeConditionTypeAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCompositeConditionTypeAccess().getAndEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Or' 
	{
        $current = grammarAccess.getCompositeConditionTypeAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCompositeConditionTypeAccess().getOrEnumLiteralDeclaration_1()); 
    }
));



// Rule ComparisonConditionType
ruleComparisonConditionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='==' 
	{
        $current = grammarAccess.getComparisonConditionTypeAccess().getEqualEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getComparisonConditionTypeAccess().getEqualEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='<' 
	{
        $current = grammarAccess.getComparisonConditionTypeAccess().getLessEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getComparisonConditionTypeAccess().getLessEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='>' 
	{
        $current = grammarAccess.getComparisonConditionTypeAccess().getGreaterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getComparisonConditionTypeAccess().getGreaterEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


